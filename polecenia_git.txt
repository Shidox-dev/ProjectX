//Komendy GIT
git init -- Inicjalizacja respozytorium git-a
git add [nazwa_pliku] lub git add . -- Dodawanie jednego lub wielu plików do staging area.
                                      Należy wpisywać po każdej modyfikacji pliku.
git commit -m -- Zatwerdzenie zmian wraz wiadomoością.
git commit -a -m -- Zatwiedzenie zmian wszystkich plików opcja -a
git status -- Wyświetla zmiany w aktualnym (HEAD) nagłówku które
              muszą być zapisane (commit).Wyświetla zmiany w katalogu
              które nie są jeszcze śledzone.Następnie zmiany które
              musza zostać dodane  [git -add] zanim zostaną zatwierdzone [git commit].
git diff -- Bez argumentów pokazuje co zmieniłeś ale nie wysłałeś do poczekalni [staging area].
            Jeżeli wszystkie twoje zmiany są już w poczekalni wynik będzie pusty.
git diff --staged lub --cached  -- Pokazuje zawartość pliku w poczekalni która trafi do respozytorium
                                  z najbliższym zatwierdzeniem.
git rm --cached [nazwa_pliku] -- Usuwanie pliku z poczekalni.
rm [nazwa_pliku] -- usunięcie pliku z dysku.
git log -- Wyświetla zmiany dokonane w katalogu (historia commit);
git log -p -- Wyświetla zmiany i co zostało zmienione.Opcja [-2] ile zmian
              wyświetlić.
git log --stat  -- Wyświetli pod każdym wpisem histori liste zmodyfikowanych
                  plików , liczbę zmienionych plików oraz liczbę dodanych
                  lub usuniętych lini.
git log -p -1 --stat -- Połączenie kilku komend.
git reset --hard HEAD^ -- Usuwanie ostatniego zapisu(commit).
git reset --hard HEAD~number -- Usuwanie ostanich kilu zapisów.
//Zdalne respozytoria
git clone [adres url] -- Kopiuje cały projekt do wybranego folderu.
git remote -v --- Wyświetli zdalne respozytornia.
//Praca nad projektem zespuł.
    1. git clone --Pobieram respozytoria.
    2.git remote add [nazwa_respozytorium] [url]
    3. modyfikuje wybrane plki.
    4.git add . --Dodaje pliki do poczekalni.
    5. git commit -m ---Zapisuje.
    6.git push [nazwa_respozytorium(git remote -v)] [nazwa branch]--publikuje na zdalnym respozytorium.
    7.cd do projektu.
    8.git remote add [nazwa repo] [url] --dodanie nowego respozytorium.
    9. git fetch [nazwa repo]
    10. git pull [nazwa repo(projectX)] [nazwa branch]
    11.git push [nazwa repo(projectX)] [branch name(master)]
//Scalanie i wysyłanie na server
git branch [name]--tworzy nową gałąż
git checkout [branch] -- Przełącza na gałąż
git merge [branch] -- scalanie
git branch -d [name_branch] -- usuwanie gałęzi.
//Zmiana wiadomoości
git rebase-i HEAD~[number]-- Wyświetli ostatnie commit-s
zmien pick na reword.
//Zarządzanie gałęziami
git fetch origin -- Aktualizuje zdalne respozytoria nie pobiera jednak plików
                    tworzy tymczasową gałąż.
git diff [nazwa gałęzi] --  Pokazuje jakie dane trafią po scaleniu[merge] lub
                            po uruchomieniu git pull.
git remote show [remote source] -- Pokazuje która gałąż zostanie wypchnięta
                                  po uruchomieniu push na poszczegulnych gałęziach.
git remote rename [remote name][new remote name] --Zmiana nazwy zdalnego respozytiorium.
git remote rm [remote name] -- Usówa zdalne respozytorium.
git pull [remote name] [branch name] -- Aktualizuje aktualne respozytorium
                                        dodaje pliki i foldery.
